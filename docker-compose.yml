version: "3.9"

services:
  traefik:
    image: traefik:v3.0
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--api.dashboard=true"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=you@example.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"
    networks:
      - dokploy-network

  proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
      args:
        TARGETOS: linux
        TARGETARCH: amd64
    environment:
      PORT: 4040
      REDIS_URL: "redis://redis:6379"
      CORS_DOMAIN: "https://4rabanime.fun,https://4rbanime.com"
    expose:
      - "4040"
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.proxy.rule=Host(`4rabanime.fun`, `4rbanime.com`) && PathPrefix(`/m3u8-proxy`)"
      - "traefik.http.routers.proxy.priority=200"
      - "traefik.http.routers.proxy.entrypoints=websecure"
      - "traefik.http.routers.proxy.tls=true"
      - "traefik.http.routers.proxy.tls.certresolver=letsencrypt"
      - "traefik.http.services.proxy.loadbalancer.server.port=4040"
      - "traefik.http.middlewares.strip-m3u8-prefix.stripprefix.prefixes=/m3u8-proxy"
      - "traefik.http.middlewares.strip-m3u8-prefix.stripprefix.forceslash=false"
      - "traefik.http.routers.proxy.middlewares=strip-m3u8-prefix@docker"

  4rb-anime:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env.production
    expose:
      - "3000"
    networks:
      - dokploy-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app.rule=Host(`4rabanime.fun`, `4rbanime.com`) && !PathPrefix(`/m3u8-proxy`)"
      - "traefik.http.routers.app.priority=50"
      - "traefik.http.routers.app.entrypoints=websecure"
      - "traefik.http.routers.app.tls=true"
      - "traefik.http.routers.app.tls.certresolver=letsencrypt"
      - "traefik.http.services.app.loadbalancer.server.port=3000"

  redis:
    image: redis:7-alpine
    networks:
      - dokploy-network

networks:
  dokploy-network:
    external: true
